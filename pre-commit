#!/bin/sh

# [WHITESPACE] --> Check for whitespace
#
if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Magic Initial commit
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

if ! git diff-index --check --cached $against
then
	echo "[WHITESPACE] --> 🚫 Can't commit! Check your whitespaces!!!"
	exit 1
else
	echo "[WHITESPACE] --> 👍 LGTM"
fi





# [ESLINT] --> JavaScript Linter
#
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".jsx\{0,1\}$")

if [[ "$STAGED_FILES" = "" ]]; then
  exit 0
fi

PASS=true

which eslint &> /dev/null
if [[ "$?" == 1 ]]; then
  echo "⚠️ Please install ESlint and friends globally first via: \"npm install -g eslint eslint-config-airbnb eslint-plugin-react\""
  exit 1
fi

for FILE in $STAGED_FILES
do
  eslint "$FILE"

  if [[ "$?" == 1 ]]; then
    PASS=false
  fi
done

if ! $PASS; then
  echo "[ESLINT] --> 🚫 Can't commit! Failed ESLint!!!"
  exit 1
else
  echo "[ESLINT] --> 👍 LGTM"
fi





# [RUBOCOP] --> Ruby style
#
FAILS=`bundle exec rubocop | grep 'no offenses detected' -o`
COUNTS=`bundle exec rubocop | grep -e '\d* offenses detected' -o | awk '{print $1}'`

if [ "$FAILS" == "no" ]; then
    echo "[RUBOCOP] --> 👍 LGTM"
    exit 0
else
    echo "[RUBOCOP] --> 🚫 You've $COUNTS offenses!!!"
    exit 1
fi

exit $?
